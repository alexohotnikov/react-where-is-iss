{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","useState","issData","setIssData","issPullOfCoords","setPullOfCoords","getRealISSPos","useCallback","a","fetch","then","resp","json","i","latitude","longitude","useEffect","intervalUpdate","setTimeout","clearTimeout","issPos","useMemo","center","zoom","type","StrictMode","style","textAlign","display","position","zIndex","margin","width","backgroundColor","opacity","padding","fontSize","bottom","fontWeight","onClick","height","defaultState","geometry","options","iconLayout","iconShadow","iconImageHref","iconImageSize","iconImageOffset","coordinates","geodesic","strokeWidth","strokeColor","render","document","querySelector"],"mappings":"2NAiGeA,EAxFH,WAAO,IAAD,EACgBC,mBAAS,MADzB,mBACPC,EADO,KACEC,EADF,OAE6BF,mBAAS,IAFtC,mBAEPG,EAFO,KAEUC,EAFV,KAKRC,EAAgBC,sBAAW,sBAAC,sBAAAC,EAAA,+EACvBC,MAAM,kDACZC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GACCR,EAAWQ,GACXN,GAAgB,SAAAQ,GAAC,4BAAQA,GAAR,CAAW,CAACF,EAAKG,SAAUH,EAAKI,oBAL3B,2CAO/B,IAEHC,qBAAU,WAEN,IAAMC,EAAiBC,YAAW,WAC9BZ,MACD,KAEH,OAAO,kBAAMa,aAAaF,MAC3B,CAACX,EAAeF,IAEnBY,qBAAU,WACNV,MACD,CAACA,IAGJ,IAAMc,EAASC,mBAAQ,WACnB,OAAOnB,EAAU,CACboB,OAAQ,CAACpB,EAAQY,SAAUZ,EAAQa,WACnCQ,KAAM,EACNC,KAAM,iBACN,CAAEF,OAAQ,CAAC,UAAW,WAAYC,KAAM,KAC7C,CAACrB,IAEJ,OACI,kBAAC,IAAMuB,WAAP,KACI,yBAAKC,MAAO,CACRC,UAAW,SACXC,QAAS,QACTC,SAAU,WACVC,OAAQ,IACRC,OAAQ,SACRC,MAAO,OACPC,gBAAiB,QACjBC,QAAS,KACTC,QAAS,SACTC,SAAU,OACVC,OAAQ,IAER,wBAAIX,MAAO,CAAEY,WAAY,SAAzB,uBACC,kBAAC,IAAD,CAAQC,QAASjC,GAAjB,yBAGJJ,GACD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ8B,MAAM,QAAQQ,OAAO,QAAQC,aAAcrB,GAC/C,kBAAC,IAAD,CAAcsB,SAAUtB,EAAOE,OAAQqB,QAAS,CAChDC,WAAY,gBACZC,YAAY,EAEZC,cAAe,gHAEfC,cAAe,CAAC,GAAI,IACpBC,gBAAiB,CAAC,EAAG,MAEzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CACIN,SAAU,CACNlB,KAAM,aACNyB,YAAY,YACL7C,IAGXuC,QAAS,CACLO,UAAU,EACVC,YAAa,EACbC,YAAa,eCjFrCC,iBAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.064f5064.chunk.js","sourcesContent":["import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport * as YA from 'react-yandex-maps';\n// styles:\nimport \"shards-ui/dist/css/shards.min.css\"\nimport \"./index.css\"\nimport { Button } from 'shards-react'\n\n\n\nconst App = () => {\n    const [issData, setIssData] = useState(null)\n    const [issPullOfCoords, setPullOfCoords] = useState([])\n\n\n    const getRealISSPos = useCallback(async () => {\n        return fetch('https://api.wheretheiss.at/v1/satellites/25544')\n        .then((resp) => resp.json())\n        .then((resp) => {\n                setIssData(resp)\n                setPullOfCoords(i => [...i, [resp.latitude, resp.longitude]])\n        })\n    }, [])\n\n    useEffect(() => {\n        // обновление\n        const intervalUpdate = setTimeout(() => {\n            getRealISSPos()\n        }, 10_000)\n\n        return () => clearTimeout(intervalUpdate)\n    }, [getRealISSPos, issPullOfCoords])\n\n    useEffect(() => {\n        getRealISSPos()\n    }, [getRealISSPos])\n\n\n    const issPos = useMemo(() => {\n        return issData ? {\n            center: [issData.latitude, issData.longitude],\n            zoom: 4,\n            type: 'yandex#hybrid'\n        } : { center: [55.751574, 37.573856], zoom: 5 }\n    }, [issData])\n\n    return (\n        <React.StrictMode>\n            <div style={{\n                textAlign: 'center',\n                display: 'block',\n                position: 'absolute',\n                zIndex: 101,\n                margin: '0 auto',\n                width: '100%',\n                backgroundColor: 'white',\n                opacity: '.9',\n                padding: '10em 0',\n                fontSize: '.1em',\n                bottom: 0,\n            }}>\n                <h1 style={{ fontWeight: 'bold' }}> Where is ISS now? </h1>\n                 <Button onClick={getRealISSPos}> Update ISS Position</Button>\n            </div>\n            {/* Loaded data from API: {issPos.center.toString()}<br /> */}\n            {issData && \n            <YA.YMaps >\n                <YA.Map width=\"100vw\" height=\"100vh\" defaultState={issPos}>\n                    <YA.Placemark geometry={issPos.center} options={{\n                    iconLayout: \"default#image\",\n                    iconShadow: true,\n                    \n                    iconImageHref: 'https://icons.iconarchive.com/icons/goodstuff-no-nonsense/free-space/512/international-space-station-icon.png',\n                    // The size of the placemark.\n                    iconImageSize: [40, 40],\n                    iconImageOffset: [0, 0]\n                }}/>\n                <YA.ZoomControl />\n                <YA.GeoObject\n                    geometry={{\n                        type: 'LineString',\n                        coordinates: [\n                            ...issPullOfCoords\n                        ],\n                    }}\n                    options={{\n                        geodesic: true,\n                        strokeWidth: 5,\n                        strokeColor: '#F008',\n                    }}\n                    />\n            </YA.Map>\n            </YA.YMaps>}\n        </React.StrictMode>\n    )\n}\n\n\nexport default App;","import React from 'react'\nimport { render } from 'react-dom';\nimport App from './components/App'\n\n\n\nrender(<App />, document.querySelector('#root'))"],"sourceRoot":""}